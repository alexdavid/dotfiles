#!/usr/bin/env bash

set -e

function section {
  echo
  echo
  echo
  echo "################################################################"
  echo "==> $1"
  echo
}

function ask {
  printf "%s: " "$2"
  read $1
}

function ask-valid {
  VAR_NAME="$1"
  shift
  PROMPT="$1"
  shift
  ANSWER="nil"
  OPTIONS="$(printf ", %s" "$@")"
  while true; do
    ask ANSWER "$PROMPT (${OPTIONS:2})"
    for VALID in "$@"; do
      if [ "$VALID" = "$ANSWER" ]; then
        export "$VAR_NAME"="$ANSWER"
        return
      fi
    done
    echo "Must be one of: ${OPTIONS:2}"
  done
}

function confirm {
  ask-valid CONTINUE "$1" yes no
  if [ "$CONTINUE" == no ]; then
    exit 1
  fi
}

section "GENERATING AND UPDATING MIRROR LIST"
curl "https://archlinux.org/mirrorlist/?country=US&protocol=https&ip_version=4" | sed -E 's/^#//' > /etc/pacman.d/mirrorlist
cat /etc/pacman.d/mirrorlist
confirm "Does this mirror list look good"


section "PARTITIONING DRIVES"
lsblk
ask DRIVE "Select a drive"
{
  echo g       # make gpt partition table

  echo n       # Add new partition (/boot)
  echo         # (default 1)
  echo         # (default 2048)
  echo "+512M"

  echo n       # Add new partition (linux)
  echo         # (default 2)
  echo         # (default)
  echo         # (default)

  echo t       # Change partition type
  echo 1       # Partition number 1 (/boot)
  echo 1       # EFI System

  echo w       # write
} | fdisk "$DRIVE"
fdisk -l
confirm "Does drive partition look good"


PARTITIONS=($(lsblk -pln -o name "$DRIVE"))


section "FORMATTING & MOUNTING DRIVES"
ask-valid ENCRYPT "Full disk encryption?" yes no
if [ "$ENCRYPT" = yes ]; then
  cryptsetup luksFormat --type luks "${PARTITIONS[2]}"
  cryptsetup luksOpen "${PARTITIONS[2]}" main
  MAIN_PARTITION="/dev/mapper/main"
else
  MAIN_PARTITION="${PARTITIONS[2]}"
fi
mkfs.vfat -F32 "${PARTITIONS[1]}"
mkfs.ext4 -F "$MAIN_PARTITION"
mount "$MAIN_PARTITION" /mnt
mkdir /mnt/boot
mount "${PARTITIONS[1]}" /mnt/boot

section "CREATING SWAPFILE"
ask SWAPSIZE "Swapfile size in MB (e.g. 4000)"
mkdir /mnt/var
dd if=/dev/zero of=/mnt/var/swap count="$SWAPSIZE" bs=1MiB
chmod 600 /mnt/var/swap
mkswap /mnt/var/swap


ask-valid CPU_TYPE "Processor type?" intel amd

section "INSTALLING BASE"
pacstrap /mnt base linux linux-firmware "$CPU_TYPE"-ucode
genfstab -U /mnt >> /mnt/etc/fstab
echo "/var/swap none swap defaults 0 0" >> /mnt/etc/fstab

section "KICKING OFF CHROOT SCRIPT"
mv chroot /mnt/chroot
arch-chroot /mnt bash /chroot
rm /mnt/chroot

section "CREATING EFISTUB BOOT ENTRY"
ask EFILABEL "EFI label"
PARTUUID=$(lsblk -dno PARTUUID ${PARTITIONS[2]})
RESUME_UUID=$(findmnt -no UUID -T /mnt/var/swap)
RESUME_OFFSET=$(filefrag -v /mnt/var/swap | awk '{ if($1=="0:"){print substr($4, 1, length($4)-2)} }')
if [ "$ENCRYPT" = yes ]; then
  FS_KERNEL_PARAMS="cryptdevice=PARTUUID=$PARTUUID:root root=/dev/mapper/root rw"
else
  FS_KERNEL_PARAMS="root=PARTUUID=$PARTUUID rw"
fi
efibootmgr \
  --disk "$DRIVE" \
  --create \
  --label "$EFILABEL" \
  --loader /vmlinuz-linux \
  --unicode "$FS_KERNEL_PARAMS initrd=\\$CPU_TYPE-ucode.img initrd=\\initramfs-linux.img resume=UUID=$RESUME_UUID resume_offset=$RESUME_OFFSET" \
  --verbose \
  ;

section "CLEANING UP"
umount /mnt/boot
umount /mnt
if [ "$ENCRYPT" = yes ]; then
  cryptsetup close main
fi
